# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["gh-pages-test"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: |
          set -o pipefail
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}" 2>&1 | tee build.log
        env:
          JEKYLL_ENV: production
      - name: Check for YAML front matter issues
        shell: bash
        run: |
          if grep -q "YAML Exception" build.log; then
            grep "YAML Exception" build.log | while read -r line; do
              # Extract file path, line number, and column number from the error message
              file_path=$(echo "$line" | sed -E 's/.*reading (.*?):.*/\1/')
              line_number=$(echo "$line" | sed -E 's/.*line ([0-9]+) .*/\1/')
              column_number=$(echo "$line" | sed -E 's/.*column ([0-9]+).*/\1/')
              
              # Output warning tied to the specific file and line number
              echo "::error file=$file_path,line=$line_number,column=$column_number::YAML issue detected at line $line_number, column $column_number in file $file_path"
            done
            exit 1
          fi
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
